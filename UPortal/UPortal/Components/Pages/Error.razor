@page "/Error"
@using System.Diagnostics
@using Microsoft.AspNetCore.Diagnostics
@inject IHttpContextAccessor HttpContextAccessor
@inject ILogger<Error> _logger

<PageTitle>Error</PageTitle>

<h1 class="text-danger">Error.</h1>
<p>@_errorMessage</p>

@if (!string.IsNullOrEmpty(_errorId))
{
    <p><strong>Error ID: @_errorId</strong>. Please use this ID when contacting support.</p>
}

@* We can keep the development mode information if desired, or remove it for a cleaner production error page *@
@*
    <h3>Development Mode</h3>
    <p>
        Swapping to <strong>Development</strong> environment will display more detailed information about the error that occurred.
    </p>
    <p>
        <strong>The Development environment shouldn't be enabled for deployed applications.</strong>
        It can result in displaying sensitive information from exceptions to end users.
        For local debugging, enable the <strong>Development</strong> environment by setting the <strong>ASPNETCORE_ENVIRONMENT</strong> environment variable to <strong>Development</strong>
        and restarting the app.
    </p>
*@

@code {
    private string _errorId = string.Empty;
    private string _errorMessage = "An error occurred while processing your request."; // Default message

    protected override void OnInitialized()
    {
        var exceptionHandlerFeature = HttpContextAccessor.HttpContext?.Features.Get<IExceptionHandlerFeature>();
        if (exceptionHandlerFeature?.Error != null)
        {
            _errorId = System.Guid.NewGuid().ToString();
            _errorMessage = "An unexpected error has occurred. Please try again later.";
            _logger.LogError(exceptionHandlerFeature.Error, "Unhandled exception caught by global error handler. Error ID: {ErrorId} Path: {Path}", _errorId, exceptionHandlerFeature.Path);
        }
        else
        {
            // This case might occur if the error page is accessed directly without an exception.
            _errorMessage = "An error occurred, but further details are unavailable.";
            _logger.LogWarning("Error page visited without specific exception details. Path: {Path}", HttpContextAccessor.HttpContext?.Request.Path);
        }
    }
}
